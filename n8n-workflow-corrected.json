{
  "name": "ImageMagick Processing Workflow - Corrected",
  "nodes": [
    {
      "parameters": {},
      "id": "start-node",
      "name": "When clicking 'Test workflow'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "filePath": "/static/test-image.jpg",
        "options": {}
      },
      "id": "read-file-node",
      "name": "Read Test Image",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/api/process",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key",
              "value": "ZWIHZc5e-SWR-XdIPykAZ3K6PncdnwBxa9VlZ9yuZ3M"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "resize"
            },
            {
              "name": "resize_percentage",
              "value": "50"
            },
            {
              "name": "image",
              "value": "={{ $binary.data }}"
            }
          ]
        },
        "options": {}
      },
      "id": "http-request-node",
      "name": "Process Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extract processed image from API response\nconst response = items[0].json;\n\nif (response.success) {\n  // Decode base64 image\n  const imageData = response.data.image;\n  const buffer = Buffer.from(imageData, 'base64');\n  \n  return [\n    {\n      json: {\n        message: 'Image processed successfully',\n        processingTime: response.data.processing_time_seconds,\n        action: response.data.action,\n        originalFormat: response.data.format\n      },\n      binary: {\n        image: {\n          data: buffer,\n          mimeType: `image/${response.data.format}`,\n          fileName: response.metadata.filename\n        }\n      }\n    }\n  ];\n} else {\n  throw new Error('Image processing failed: ' + (response.error || 'Unknown error'));\n}"
      },
      "id": "code-node",
      "name": "Process Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    }
  ],
  "connections": {
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "Read Test Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Test Image": {
      "main": [
        [
          {
            "node": "Process Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Image": {
      "main": [
        [
          {
            "node": "Process Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T12:00:00.000Z",
  "versionId": "1"
}
